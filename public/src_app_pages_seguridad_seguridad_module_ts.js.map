{"version":3,"file":"src_app_pages_seguridad_seguridad_module_ts.js","mappings":"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","sources":["./src/app/pages/seguridad/gestionar-roles/gestionar-roles.component.ts","./src/app/pages/seguridad/gestionar-roles/gestionar-roles.component.html","./src/app/pages/seguridad/gestionar-usuarios/gestionar-usuarios.component.ts","./src/app/pages/seguridad/gestionar-usuarios/gestionar-usuarios.component.html","./src/app/pages/seguridad/seguridad-routing.module.ts","./src/app/pages/seguridad/seguridad.module.ts","./src/app/pages/seguridad/services/user.service.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-gestionar-roles',\n  templateUrl: './gestionar-roles.component.html',\n  styleUrls: ['./gestionar-roles.component.scss'],\n})\nexport class GestionarRolesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nb-card>\n  <nb-card-header>\n    Manage Roles\n  </nb-card-header>\n\n  <nb-card-body>\n    <p>gestionar-roles works!</p>\n  </nb-card-body>\n</nb-card>\n\n","import {Component, OnInit} from '@angular/core';\nimport {LocalDataSource} from 'ng2-smart-table';\nimport {UserService} from '../services/user.service';\nimport {NbToastrService} from '@nebular/theme';\nimport {AuthService} from '../../../auth/services/auth.service';\nimport Swal from 'sweetalert2';\nimport {FormBuilder, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'ngx-gestionar-usuarios',\n  templateUrl: './gestionar-usuarios.component.html',\n  styleUrls: ['./gestionar-usuarios.component.scss'],\n})\nexport class GestionarUsuariosComponent implements OnInit {\n  public ifShow = false;\n  public title;\n\n  public createUserForm = this.formBuilder.group({\n    id: [],\n    name: ['', Validators.required],\n    username: ['', Validators.required],\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', Validators.required],\n  });\n\n  settings = {\n    add: {\n      addButtonContent: '<i class=\"nb-plus\"></i>',\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n    },\n    edit: {\n      editButtonContent: '<i class=\"nb-edit\"></i>',\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n    },\n    delete: {\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\n      confirmDelete: true,\n    },\n    columns: {\n\n      name: {\n        title: 'Name',\n        type: 'string',\n      },\n      email: {\n        title: 'Email',\n        type: 'string',\n      },\n      username: {\n        title: 'Username',\n        type: 'string',\n      },\n    },\n    actions: {\n      add: true,\n      position: 'right',\n    },\n    mode: 'external',\n\n  };\n\n  source: LocalDataSource = new LocalDataSource();\n\n\n  constructor(private userService: UserService,\n              private formBuilder: FormBuilder,\n              private toastrService: NbToastrService,\n              private authService: AuthService) {\n  }\n\n  ngOnInit(): void {\n    this.getListUser();\n  }\n\n  getListUser() {\n    this.userService.getAllUser()\n      .subscribe(resp => {\n        this.source = resp.resultFind;\n      });\n  }\n\n  onDeleteConfirm(event) {\n    if (event.data._id === this.authService.usuario._id) {\n      return Swal.fire({\n        title: 'Error',\n        text: 'You can not delete yourself!',\n        icon: 'error',\n        confirmButtonColor: '#497bff',\n      });\n    }\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'You won\\'t be able to revert this!',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#497bff',\n      cancelButtonColor: '#ff4274',\n      confirmButtonText: 'Yes, delete it!',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.userService.deleteUser(event.data._id)\n          .subscribe(resp => {\n            this.getListUser();\n            this.toastrService.success('User deleted successfully!', 'Done!');\n          });\n      }\n    });\n  }\n\n  onUpdateConfirm(event) {\n    this.title = 'Edit User';\n    this.ifShow = true;\n    this.createUserForm = this.formBuilder.group({\n      id: [event.data._id],\n      name: [event.data.name, Validators.required],\n      username: [event.data.username, Validators.required],\n      email: [event.data.email, [Validators.required, Validators.email]],\n      password: [],\n    });\n\n  }\n\n  openForm() {\n    this.title = 'Create User';\n    this.ifShow = true;\n    this.createUserForm.reset();\n  }\n\n  cancel() {\n    this.ifShow = false;\n    this.createUserForm.reset();\n  }\n\n  submitCreate() {\n    this.authService.register(this.createUserForm.value)\n      .subscribe(resp => {\n        this.getListUser();\n        this.toastrService.success('User created successfully!', 'Done!');\n        this.ifShow = false;\n      });\n  }\n\n  submitUpdate() {\n    // this.userService.updateUser(this.createUserForm.value, this.createUserForm.value.id)\n    //   .subscribe(resp => {\n    //     console.log(resp, 'edito');\n    //     this.getListUser();\n    //     this.toastrService.success('User Edited successfully!', 'Done!');\n    //     this.ifShow = false;\n    //   });\n  }\n\n}\n","<nb-card *ngIf=\"ifShow\" class=\"animate__animated animate__fadeIn\">\n  <nb-card-header>\n    {{ title }}\n  </nb-card-header>\n  <nb-card-body>\n    <form\n      [formGroup]=\"createUserForm\">\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label class=\"label\" for=\"exampleInputEmail1\">Full Name</label>\n            <input formControlName=\"name\" fullWidth id=\"exampleInputName\" nbInput placeholder=\"Name\" type=\"name\">\n          </div>\n          <div class=\"form-group\">\n            <label class=\"label\" for=\"exampleInputEmail1\">Username</label>\n            <input formControlName=\"username\" fullWidth id=\"exampleInputUsername\" nbInput placeholder=\"Username\"\n                   type=\"username\">\n          </div>\n        </div>\n\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label class=\"label\" for=\"exampleInputEmail1\">Email address</label>\n            <input formControlName=\"email\" fullWidth id=\"exampleInputEmail1\" nbInput placeholder=\"Email\" type=\"email\">\n          </div>\n          <div class=\"form-group\">\n            <label class=\"label\" for=\"exampleInputPassword1\">Password</label>\n            <input formControlName=\"password\" fullWidth id=\"exampleInputPassword1\" nbInput placeholder=\"Password\"\n                   type=\"password\">\n          </div>\n        </div>\n        <div class=\"col-md-12\">\n          <button (click)=\"this.createUserForm.get('id').value !== null ? submitUpdate() : submitCreate() \" nbButton status=\"primary\">Submit</button>\n          <button (click)=\"cancel()\" class=\"cancel\" nbButton status=\"danger\">Cancel</button>\n        </div>\n      </div>\n    </form>\n  </nb-card-body>\n</nb-card>\n\n\n<nb-card>\n  <nb-card-header>\n    Manage Users\n  </nb-card-header>\n  <nb-card-body>\n    <ng2-smart-table (create)=\"openForm()\" (delete)=\"onDeleteConfirm($event)\" (edit)=\"onUpdateConfirm($event)\"\n                     [settings]=\"settings\"\n                     [source]=\"source\">\n    </ng2-smart-table>\n  </nb-card-body>\n</nb-card>\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {GestionarUsuariosComponent} from './gestionar-usuarios/gestionar-usuarios.component';\nimport {GestionarRolesComponent} from './gestionar-roles/gestionar-roles.component';\n\nconst routes: Routes = [\n  {path: 'manage-users', component: GestionarUsuariosComponent},\n  {path: 'manage-roles', component: GestionarRolesComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SeguridadRoutingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {SeguridadRoutingModule} from './seguridad-routing.module';\nimport {GestionarUsuariosComponent} from './gestionar-usuarios/gestionar-usuarios.component';\nimport {GestionarRolesComponent} from './gestionar-roles/gestionar-roles.component';\nimport {NbButtonModule, NbCardModule, NbInputModule} from '@nebular/theme';\nimport {Ng2SmartTableModule} from 'ng2-smart-table';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    GestionarUsuariosComponent,\n    GestionarRolesComponent,\n  ],\n  imports: [\n    CommonModule,\n    SeguridadRoutingModule,\n    NbCardModule,\n    Ng2SmartTableModule,\n    NbButtonModule,\n    NbInputModule,\n    ReactiveFormsModule,\n    FormsModule,\n  ],\n})\nexport class SeguridadModule {\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {environment} from '../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAllUser(): Observable<any> {\n    return this.http.get(`${environment.API_INTERNET}/user`, {\n      headers: {'x-token': this.token},\n    });\n  }\n\n  getUserById(id: string): Observable<any> {\n    return this.http.get(`${environment.API_INTERNET}/${id}`);\n  }\n\n  updateUser(user, id): Observable<any> {\n    return this.http.put(`${environment.API_INTERNET}/user/${id}`, user);\n  }\n\n  deleteUser(id: string): Observable<any> {\n    return this.http.delete(`${environment.API_INTERNET}/user/${id}`);\n  }\n\n  get token() {\n    return localStorage.getItem('token');\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}